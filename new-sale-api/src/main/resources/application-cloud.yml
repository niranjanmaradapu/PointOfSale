server:
 port: 8081

spring:
 application:
    name: new-sale-service 
 datasource:
    platform: postgres
    url: jdbc:postgresql://new-sale-api-pos:5432/new-sale-api
    username: postgres
    password: Otsi@123
 jpa:
   hibernate:
    ddl-auto: update
   database-platform: org.hibernate.dialect.PostgreSQL9Dialect
   show-sql: true
 rabbitmq:
      host: aeb8cc91b2f7948a8bc858c8d8f7fb4d-768590259.ap-south-1.elb.amazonaws.com
      port: 5672
      username: user
      password: piV7lSjh6q
   
eureka:
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: http://10.100.143.45:8762/eureka/
  instance:
    instance-id: ${spring.application.name}:${random.int}
    hostname: localhost
logging:
    file:
      name: C:/Users/ADMIN/Desktop/logs/newsale.log    
    level:
      com.otsi.retail.newSale.serviceimpl: DEBUG   
springdoc:
  packagesToScan: com.otsi.retail.newSale
  
######################### REST CALLS ###########################
  
  
inventoryUpdateTextile_url: http://inventory-module:9092/inventoryTextile/fromNewsaleForTextile

getreturnslip_url: http://customer-management:8082/customer/getListOfReturnSlips

getreturnslips_url: http://customer-management:8082/customer/getAllListOfReturnSlips

getCustomerDetailsFromURM_url: http://usermanagement:8084/user/getUser

inventoryUpdateRetail_url: http://inventory-module:9092/inventoryRetail/fromNewsaleForRetail

getNewSaleWithHsn_url: http://hsn-details:8083/hsnDetails/getHsnDetails

getStoreDetails_url: http://usermanagement:8084/store/storeList

getUserDetails_url: http://usermanagement:8084/user/getUsersForGivenIds 

updateCreditNotesDetails_url: http://hsn-details:8083/credit-debit-notes/updateCreditDebitNotes


  
