name: CI - CD Build @ Connection-pool
on:
  push:
    branches:
      - DevOps
  pull_request:
    branches: 
      - DevOps

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: '8'
          cache: 'maven'
          
      - name: Set up Maven
        uses: stCarolas/setup-maven@v4
        with:
          maven-version: 3.8.2
          
      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      
      
      - name: Build with Maven
        run: mvn -B package --file connection-pool/pom.xml -DskipTests # change location of pom.xml file   
      
        
      - name: Persistent workflow data as artificats 
        uses: actions/upload-artifact@v2
        with: 
          name: github-actions-artifact
          path: connection-pool/target
 
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      
#      - name: Login to DockerHub
#        uses: docker/login-action@v1 
#        with:
#          username: ${{ secrets.DOCKERHUB_USERNAME_R }}
#          password: ${{ secrets.DOCKERHUB_TOKEN_R }}

      
#      - name: Build and push
#        uses: docker/build-push-action@v2
#        with:
#          context: .
#          file: connection-pool/Dockerfile
#          platforms: linux/amd64
#          push: true
#          tags: ${{ secrets.DOCKERHUB_USERNAME_R }}/connection-pool:v1
#      - name: Setup tmate session
#        uses: mxschmitt/action-tmate@v3
        
      - name: Login to ECR
        id: ecr
        uses: jwalton/gh-ecr-login@v1
        with:
          access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          region: ap-south-1
      - name: Push to ECR
        run: |
         docker build -t connection-pool  connection-pool/
         docker tag connection-pool ${{ steps.ecr.outputs.account }}.dkr.ecr.ap-south-1.amazonaws.com/connection-pool:latest
         docker push ${{ steps.ecr.outputs.account }}.dkr.ecr.ap-south-1.amazonaws.com/connection-pool:latest
      
#      - name: deploy to cluster
#        uses: kodermax/kubectl-aws-eks@master
#        env:
#          KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}
#          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
#          ECR_REPOSITORY: my-app
#          IMAGE_TAG: ${{ github.sha }}
#        with:
#          args: set image deployment/$ECR_REPOSITORY $ECR_REPOSITORY=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
      - name: Deploy
        uses: cancue/eks-action@v0.0.2
        env:
          aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws_region: ap-south-1 # we can edit 
          cluster_name: Microservice-K8S-Cluster # we can edit
        with:
          args: |
            kubectl apply -f  k8s/ 
